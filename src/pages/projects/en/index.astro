---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { PROJECTS } from "@consts";
import { useTranslations} from '@i18n/utils/utils.ts';

const lang = Astro.url.pathname.endsWith("/en/") ? "en" : "es";
const t = useTranslations(lang);

const projects = (await getCollection(`projects`))
    .filter(
        (project) => !project.data.draft && project.id.startsWith(`${lang}/`),
    )
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

const companies = [...new Set(projects.map((project) => project.data.company))];

---

<PageLayout title={PROJECTS.TITLE} description={PROJECTS.DESCRIPTION}>
    <Container>
        <div class="space-y-5">
            <div class="animate font-semibold text-black dark:text-white">
                {t('nav.projects')}
            </div>

            {/* Selector de compañías */}
            <div class="flex space-x-4">
                <select
                    id="companyFilter"
                    class="animate border border-gray-300 rounded-md px-2 py-1 text-sm"
                >
                    <option class="text-sm" value="all">{t('nav.allcompanies')}</option>
                    {
                        companies.map((company, index) => (
                            <option value={company}>{company}</option>
                        ))
                    }
                    <option class="text-sm" value="Personal">Personal</option>
                </select>
            </div>

            <ul id="projectsList" class="animate flex flex-col gap-4">
                {
                    projects.map((project) => (
                        <li data-company={project.data.company}>
                            <ArrowCard  entry={project} />
                        </li>
                    ))
                }
            </ul>
        </div>
        <script>console.log("cagaré")</script>
    </Container>
</PageLayout>

<script define:vars={{ projects, companies}} is:inline>

    function OnCompanySelected(event) {
        //Change projects visibility
        const projectItems = document.querySelectorAll('#projectsList li');
        projectItems.forEach((li) => {
            if(event.target.value == "all")
            {
                li.style.display = 'block';
            }else{
                const projectCompany = li.getAttribute('data-company');
                if (projectCompany === event.target.value) {
                    li.style.display = 'block';
                }else{
                    li.style.display = 'none';
                }
            }
        });
    }

    const input = document.querySelectorAll("#companyFilter");
    input.forEach((e) => {
        e.addEventListener("change", (event) => {
            OnCompanySelected(event);});
    });
</script>
